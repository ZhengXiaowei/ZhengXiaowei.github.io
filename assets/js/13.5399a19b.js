(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{163:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"hello-mongodb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hello-mongodb","aria-hidden":"true"}},[t._v("#")]),t._v(" Hello, MongoDB")]),a("p",[t._v("emm...其实也是因为很久没有更新过了，再加上最近刚好系统的学完了下"),a("code",[t._v("mongoDB")]),t._v("，就干脆发到这上面来了。")]),a("h2",{attrs:{id:"数据crud"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据crud","aria-hidden":"true"}},[t._v("#")]),t._v(" 数据CRUD")]),a("h3",{attrs:{id:"插入数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插入数据","aria-hidden":"true"}},[t._v("#")]),t._v(" 插入数据")]),a("h4",{attrs:{id:"insertone"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#insertone","aria-hidden":"true"}},[t._v("#")]),t._v(" insertOne")]),a("h5",{attrs:{id:"语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法","aria-hidden":"true"}},[t._v("#")]),t._v(" 语法")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("db.dbName.insertOne(<document>, {\n\twriteConcern: <document>\n});\n\n# document 插入的文档内容\n# options 插入文档的操作参数\n## writeConcern 文档的写入级别 默认就行\n")])])]),a("h5",{attrs:{id:"示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例","aria-hidden":"true"}},[t._v("#")]),t._v(" 示例")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('# 插入一条数据\ndb.dbName.insertOne(\n{\n\tid: 1,\n\tname: "张三"\n})\n\n# 成功后的返回\n{ "acknowledged": true, "insertedId": 1}\n')])])]),a("h5",{attrs:{id:"注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意事项","aria-hidden":"true"}},[t._v("#")]),t._v(" 注意事项")]),a("div",{staticClass:"warning custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),a("p",[a("code",[t._v("acknowledged")]),t._v(": true 表示"),a("code",[t._v("mongodb")]),t._v("的写入安全级别被启动，由于我们在"),a("code",[t._v("db.dbName.insertOne")]),t._v("命令中没有提供"),a("code",[t._v("writeConcern")]),t._v("文档，这里显示的是"),a("code",[t._v("mongodb")]),t._v("默认的安全写级别启用状态。")])]),a("div",{staticClass:"warning custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),a("p",[a("code",[t._v("insertedId")]),t._v("是当前插入文档的"),a("code",[t._v("Object_id")]),t._v("。")]),a("p",[a("code",[t._v("dbName")]),t._v("在不存在时会自动"),a("strong",[t._v("创建")]),t._v("。")])]),a("h4",{attrs:{id:"insertmany"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#insertmany","aria-hidden":"true"}},[t._v("#")]),t._v(" insertMany")]),a("h5",{attrs:{id:"语法-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 语法")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("db.dbName.insertMany([document array], {\n\twriteConcern: <document>,\n\tordered: <boolean>\n});\n\n# [document array] 要插入的文档集合\n# options 插入文档操作的参数\n## writeConcern: 文档的安全写入级别 默认就行\n## ordered: 文档的写入顺序 默认为true 按顺序插入\n")])])]),a("h5",{attrs:{id:"示例-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 示例")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('# 插入多条数据\ndb.dbName.insertMany([\n\t{\n\t\tname: "张三",\n\t\tage: 24\n\t},\n\t{\n\t\tname: "李四",\n\t\tage: 20\n\t}\n])\n\n# 注意 insertMany 插入的是一个数组文档集合\n')])])]),a("div",{staticClass:"warning custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("注意事项")]),a("p",[t._v("在使用"),a("code",[t._v("insertMany")]),t._v("插入多条文档的时候，在"),a("code",[t._v("ordered")]),t._v("为"),a("code",[t._v("true")]),t._v("的情况下，如果有其中一条文档出现错误，比如主键重复之类的，那么会导致所有文档无法被插入。反之，如果"),a("code",[t._v("ordered")]),t._v("属性为"),a("code",[t._v("false")]),t._v("的话，只有出错的文档无法被插入。可以使用"),a("code",[t._v("db.dbName.insertMany([], { ordered: false })")]),t._v("来控制是否按顺序插入文档。")])]),a("h4",{attrs:{id:"insert"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#insert","aria-hidden":"true"}},[t._v("#")]),t._v(" insert")]),a("h5",{attrs:{id:"语法-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法-3","aria-hidden":"true"}},[t._v("#")]),t._v(" 语法")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("db.dbName.insert(<document or array of documents>, {\n\twriteConcern: <document>,\n\tordered: <boolean>\n});\n\n# <document or array of documents> 要插入的文档集合 可单个也可多个\n# options 插入文档操作的参数\n## writeConcern: 文档的安全写入级别 默认就行\n## ordered: 文档的写入顺序 默认为true 按顺序插入\n")])])]),a("h5",{attrs:{id:"示例-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例-3","aria-hidden":"true"}},[t._v("#")]),t._v(" 示例")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('# 插入一条数据\ndb.dbName.insert(\n\t{\n\t\tname: "张三"\n\t}\n)\n\n# 插入多条数据\ndb.dbName.insert([\n\t{\n\t\tname: "张三"\n\t},\n\t{\n\t\tname: "李四"\n\t}\n])\n')])])]),a("h4",{attrs:{id:"save"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#save","aria-hidden":"true"}},[t._v("#")]),t._v(" save")]),a("p",[a("code",[t._v("save")]),t._v("和"),a("code",[t._v("insert")]),t._v("命令一样，唯一不同的地方在于"),a("code",[t._v("save")]),t._v("无法创建多条数据 。")]),a("h4",{attrs:{id:"区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#区别","aria-hidden":"true"}},[t._v("#")]),t._v(" 区别")]),a("p",[a("code",[t._v("insertOne")]),t._v("和"),a("code",[t._v("insertMany")]),t._v("不支持"),a("code",[t._v("db.dbName.explain()")]),t._v("命令。而"),a("code",[t._v("insert")]),t._v("可以。"),a("code",[t._v("explain")]),t._v("可以见"),a("a",{attrs:{href:"####explain"}},[t._v("explain")])]),a("h3",{attrs:{id:"读取数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#读取数据","aria-hidden":"true"}},[t._v("#")]),t._v(" 读取数据")]),a("h4",{attrs:{id:"find"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#find","aria-hidden":"true"}},[t._v("#")]),t._v(" find")]),a("h5",{attrs:{id:"语法-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法-4","aria-hidden":"true"}},[t._v("#")]),t._v(" 语法")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("db.dbName.find(<query>,<projection>);\n\n# query 筛选操作\n# projection 字段投影\n")])])]),a("p",[t._v("其中"),a("code",[t._v("projection")]),t._v("定义了对读取结果的进行的"),a("a",{attrs:{href:"####%E6%96%87%E6%A1%A3%E6%8A%95%E5%BD%B1"}},[t._v("投影")]),t._v("。")]),a("h5",{attrs:{id:"示例-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例-4","aria-hidden":"true"}},[t._v("#")]),t._v(" 示例")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('# 读取所有数据\ndb.dbName.find();\n\n# 对读取文档进行格式化\ndb.dbName.find().pretty();\n\n# 读取张三的数据\ndb.dbName.find({ name: "张三" });\n\n# 读取年龄为25岁的张三的数据\ndb.dbName.find({ name: "张三", age: 25 });\n')])])]),a("h4",{attrs:{id:"操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作符","aria-hidden":"true"}},[t._v("#")]),t._v(" 操作符")]),a("h5",{attrs:{id:"比较操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#比较操作符","aria-hidden":"true"}},[t._v("#")]),t._v(" 比较操作符")]),a("h6",{attrs:{id:"语法-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法-5","aria-hidden":"true"}},[t._v("#")]),t._v(" 语法")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("db.dbName.find({ field: { $<operator>: <value> } })\n\n# field 需要筛选的字段\n# operator 操作符\n# value 查询值\n")])])]),a("h6",{attrs:{id:"操作符-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作符-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 操作符")]),a("ul",[a("li",[a("code",[t._v("$eq")]),t._v(": 匹配字段相等的文档")]),a("li",[a("code",[t._v("$ne")]),t._v(": 匹配字段不相等的文档")]),a("li",[a("code",[t._v("$gt")]),t._v(": 匹配字段值大于查询值的文档")]),a("li",[a("code",[t._v("$gte")]),t._v(": 匹配字段值大于等于查询值的文档")]),a("li",[a("code",[t._v("$lt")]),t._v(": 匹配字段值小于查询值的文档")]),a("li",[a("code",[t._v("$lte")]),t._v(": 匹配字段值小于等于查询值的文档")])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('# 查找名字为张三的用户\ndb.user.find({ name: { $eq: "张三" }});\n\n# 查找名字不是张三的用户\ndb.user.find({ name: { $ne: "张三" }});\n\n# 查找年龄大于19岁的用户\ndb.user.find({ age: { $gt: 19 }});\n\n# 查找年龄大于或者等于19的用户\ndb.user.find({ age: { $gte: 19 }});\n\n# 查找名字为张三，且年龄大于18的用户\ndb.user.find({ name: { $eq: "张三" }, age: { $gt: 18 }});\n')])])]),a("p",[t._v("除此之外，还有两个操作符：")]),a("ul",[a("li",[a("code",[t._v("$in")]),t._v(": 匹配字段值在查询值之间的数据")]),a("li",[a("code",[t._v("$nin")]),t._v(": 匹配字段值不在查询值之间的数据")])]),a("p",[a("code",[t._v("$in")]),t._v("的形式为："),a("code",[t._v("{ field: { $in: [<value1>, <value2>, ..., <valueN>] }}")])]),a("p",[a("code",[t._v("$nin")]),t._v("同上。")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('# 查找名字为张三和李四的信息\ndb.user.find({ name: { $in: ["张三", "李四"] }});\n\n# 查找名字不等于张三和李四的信息\ndb.user.find({ name: { $nin: ["张三", "李四"] }});\n')])])]),a("h5",{attrs:{id:"逻辑操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#逻辑操作符","aria-hidden":"true"}},[t._v("#")]),t._v(" 逻辑操作符")]),a("h6",{attrs:{id:"操作符-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作符-3","aria-hidden":"true"}},[t._v("#")]),t._v(" 操作符")]),a("ul",[a("li",[a("code",[t._v("$not")]),t._v(": 匹配筛选条件不成立的文档")]),a("li",[a("code",[t._v("$and")]),t._v(": 匹配多个筛选条件全部成立的文档")]),a("li",[a("code",[t._v("$or")]),t._v(": 匹配至少一个筛选条件成立的文档")]),a("li",[a("code",[t._v("$nor")]),t._v(": 匹配多个筛选条件全部不成立的文档")])]),a("p",[a("code",[t._v("$not")]),t._v("的形式为："),a("code",[t._v("{ field: $not: { <operator-expression> }}")])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 查找年龄不小于20的用户")]),t._v("\ndb.user.find"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" age: "),a("span",{attrs:{class:"token variable"}},[t._v("$not")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$lt")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" 20 "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("code",[t._v("$and")]),t._v("的形式为： "),a("code",[t._v("{ $and: [<expression1>, <expression2>, ..., <expressionN>] }")])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 查找年龄大于20且用户名不为张三的用户")]),t._v("\ndb.user.find"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$and")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" age: "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$gt")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" 20 "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name: "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$ne")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"张三"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# and 简写")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 字段不同时")]),t._v("\ndb.user.find"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tage: "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$gt")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" 20 "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\tname: "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$ne")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"张三"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 字段相同时")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 查找年龄大于20且小于25的用户")]),t._v("\ndb.user.find"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tage: "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$gt")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" 20, "),a("span",{attrs:{class:"token variable"}},[t._v("$lt")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" 25 "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("code",[t._v("$or")]),t._v("和"),a("code",[t._v("$nor")]),t._v("的形式同"),a("code",[t._v("$and")]),t._v("。")]),a("h5",{attrs:{id:"字段操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字段操作符","aria-hidden":"true"}},[t._v("#")]),t._v(" 字段操作符")]),a("ul",[a("li",[a("code",[t._v("$exists")]),t._v(": 匹配字段存在的文档")]),a("li",[a("code",[t._v("$type")]),t._v(": 匹配字段类型是指定值的文档")])]),a("p",[t._v("使用"),a("code",[t._v("exists")]),t._v("，形式为："),a("code",[t._v("{ field: { $exists: <boolean> } }")])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 获取账户类型包含银行账户的文档")]),t._v("\ndb.accouts.find"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{attrs:{class:"token string"}},[t._v('"_id.type"')]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$exists")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 匹配id.type存在且值为checking的文档")]),t._v("\ndb.accounts.find"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{attrs:{class:"token string"}},[t._v('"_id.type"')]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$eq")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"checking"')]),t._v(",\n\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$exists")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("code",[t._v("$type")]),t._v("的形式有两种：")]),a("ul",[a("li",[a("code",[t._v("{ field: { $type: <BSON type> } }")])]),a("li",[a("code",[t._v("{ field: { $type: [<BSON type1>, <BSON type2>, ..., <BSON typeN>] } }")])])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 查找age字段类型为null的数据")]),t._v("\ndb.user.find"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tage: "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$type")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" null\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 查找age字段类型为string的数据")]),t._v("\ndb.user.find"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tage: "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$type")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"string"')]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 查找主键_id为ObjectId和number的数据")]),t._v("\ndb.user.find"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t_id: "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$type")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"ObjectId"')]),t._v(", "),a("span",{attrs:{class:"token string"}},[t._v('"number"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h5",{attrs:{id:"数组操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组操作符","aria-hidden":"true"}},[t._v("#")]),t._v(" 数组操作符")]),a("p",[t._v("常用的数组操作符有：")]),a("ul",[a("li",[a("code",[t._v("$all")]),t._v(": 匹配数组字段中包含所有查询值的文档")]),a("li",[a("code",[t._v("$elemMatch")]),t._v(": 匹配数组字段中至少存在一个值满足筛选条件的文档")])]),a("h6",{attrs:{id:"示例-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例-5","aria-hidden":"true"}},[t._v("#")]),t._v(" 示例")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 新建一些信息")]),t._v("\ndb.user.insert"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tname: "),a("span",{attrs:{class:"token string"}},[t._v('"张三"')]),t._v(",\n\t\tage: 20,\n\t\thabbies: "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"篮球"')]),t._v(", "),a("span",{attrs:{class:"token string"}},[t._v('"足球"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tname: "),a("span",{attrs:{class:"token string"}},[t._v('"李四"')]),t._v(",\n\t\tage: 22,\n\t\thabbies: "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"唱歌"')]),t._v(", "),a("span",{attrs:{class:"token string"}},[t._v('"跑步"')]),t._v(", "),a("span",{attrs:{class:"token string"}},[t._v('"游泳"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 查找喜欢篮球和足球的用户")]),t._v("\ndb.user.find"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\thabbies: "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$all")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"篮球"')]),t._v(", "),a("span",{attrs:{class:"token string"}},[t._v('"足球"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 查找爱好喜欢唱歌和足球的用户")]),t._v("\ndb.user.find"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\thabbies: "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$elemMatch")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$in")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"唱歌"')]),t._v(", "),a("span",{attrs:{class:"token string"}},[t._v('"足球"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h5",{attrs:{id:"运算操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算操作符","aria-hidden":"true"}},[t._v("#")]),t._v(" 运算操作符")]),a("p",[t._v("运算操作符使用"),a("code",[t._v("$regex")]),t._v("使用正则表达式进行匹配文档数据。")]),a("p",[a("code",[t._v("$regex")]),t._v("有两种语法：")]),a("ul",[a("li",[a("code",[t._v('{ field: { : /pattern/, : "<options>" } }')])]),a("li",[a("code",[t._v("{ field: { : /pattern/<options> } }")])])]),a("h6",{attrs:{id:"示例-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例-6","aria-hidden":"true"}},[t._v("#")]),t._v(" 示例")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 第二种语法使用较少，通常搭配$in使用")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 查找名字中以c开头或者j开头的用户")]),t._v("\ndb.user.find"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tname: "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$in")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("/^c/, /^j/"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 查找用户名字中包括lie的用户，不区分大小写")]),t._v("\ndb.user.find"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tname: "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$regex")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" /lie/,\n\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$options")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"i"')]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h4",{attrs:{id:"游标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#游标","aria-hidden":"true"}},[t._v("#")]),t._v(" 游标")]),a("p",[t._v("使用"),a("code",[t._v("db.dbName.find()")]),t._v("返回的就是一个游标，在不迭代游标的情况下，默认只列出前"),a("strong",[t._v("20")]),t._v("个数据文档。")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("var cursor "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" db.user.find"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("# 前20条用户数据")]),t._v("\ncursor"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("1"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("# 使用游标下标访问数据 ")]),t._v("\n")])])]),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),a("p",[t._v("这里定义了一个"),a("code",[t._v("cursor")]),t._v("变量用来保存游标，在游标没有遍历结束的情况下，10分钟后会被自动关闭，或者手动遍历结束，游标也会自动关闭。")])]),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),a("p",[t._v("如果想要游标不超时关闭，可以使用"),a("code",[t._v("noCursorTimeout()")]),t._v("来保持游标的持久性。\n比如： "),a("code",[t._v("var cursor = db.user.find().noCursorTimeout()")]),t._v("。")]),a("p",[t._v("但需要注意的是，如果没有去遍历游标，则需要手动去关闭："),a("code",[t._v("cursor.close()")]),t._v("。")])]),a("h5",{attrs:{id:"游标函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#游标函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 游标函数")]),a("h6",{attrs:{id:"函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 函数")]),a("ul",[a("li",[a("code",[t._v("cursor.hasNext()")]),t._v(" 判断游标中是否还有没有返回的游标")]),a("li",[a("code",[t._v("cursor.next()")]),t._v(" 返回下一个还未返回的游标")]),a("li",[a("code",[t._v("cursor.forEach(<function>)")]),t._v(" 循环遍历游标数据")]),a("li",[a("code",[t._v("cursor.limit(<number>)")]),t._v(" 返回指定数量的游标")]),a("li",[a("code",[t._v("cursor.skip(<offset>)")]),t._v(" 跳过指定数量的游标")]),a("li",[a("code",[t._v("cursor.count(<applySkipLimit>)")]),t._v(" 计数游标数")]),a("li",[a("code",[t._v("cursor.sort(<document>)")]),t._v(" 对游标进行排序")])]),a("h6",{attrs:{id:"示例-7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例-7","aria-hidden":"true"}},[t._v("#")]),t._v(" 示例")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 返回下一个游标")]),t._v("\nvar cursor "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" db.user.find"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nwhile"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cursor.hasNext"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("))")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tprintjson"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cursor.next"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("))")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 遍历游标")]),t._v("\ncursor.forEach"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("printjson"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 返回一条数据")]),t._v("\ndb.user.find"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name: "),a("span",{attrs:{class:"token string"}},[t._v('"张三"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".limit"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("1"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 跳过前2条数据")]),t._v("\ndb.user.find"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name: "),a("span",{attrs:{class:"token string"}},[t._v('"张三"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".skip"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("2"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 统计名为张三的用户")]),t._v("\ndb.user.find"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name: "),a("span",{attrs:{class:"token string"}},[t._v('"张三"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".count"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("# 返回find的数据数量")]),t._v("\ndb.user.find"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name: "),a("span",{attrs:{class:"token string"}},[t._v('"张三"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".limit"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("1"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".count"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("# 依然返回find的数据数量")]),t._v("\ndb.user.find"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name: "),a("span",{attrs:{class:"token string"}},[t._v('"张三"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".limit"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("1"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".count"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("true"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("# 返回1")]),t._v("\n")])])]),a("div",{staticClass:"warning custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("注意事项")]),a("p",[t._v("如果"),a("code",[t._v("limit")]),t._v("传入的是"),a("code",[t._v("0")]),t._v("，那么返回的还是未限制的数据条数。")])]),a("div",{staticClass:"warning custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("注意事项")]),a("p",[t._v("在"),a("code",[t._v("cursor.count")]),t._v("中，"),a("code",[t._v("applySkipLimit")]),t._v("默认为"),a("code",[t._v("false")]),t._v("，也就是说，"),a("code",[t._v("cursor.count")]),t._v("不会考虑"),a("code",[t._v("cursor.skip")]),t._v("和"),a("code",[t._v("cursor.limit")]),t._v("的效果。")])]),a("div",{staticClass:"warning custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("注意事项")]),a("p",[t._v("在使用"),a("code",[t._v("db.dbName.find().count()")]),t._v("，也就是"),a("code",[t._v("find")]),t._v("不提供筛选条件的时候，"),a("code",[t._v("count")]),t._v("则会从集合的元数据中取得结果。"),a("strong",[t._v("在复杂的分布式结构中，这种做法是不提倡的，因为文档数据可能不准确")]),t._v("。")])]),a("p",[t._v("在"),a("code",[t._v("sort")]),t._v("中，可以定义一些字段的排序要求来排序整个文档，具体语法为："),a("code",[t._v("sort({ field: ordering })")]),t._v("。其中"),a("code",[t._v("ordering")]),t._v("的值有"),a("code",[t._v("1")]),t._v("和"),a("code",[t._v("-1")]),t._v("，"),a("code",[t._v("1")]),t._v("表示由小到大，也就是升序，"),a("code",[t._v("-1")]),t._v("表示由大到小，也就是降序排序。")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 年龄从大到小排列")]),t._v("\ndb.user.find"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".sort"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" age: -1 "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 年龄由大到小 姓名按字母排序")]),t._v("\ndb.user.find"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".sort"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" age: -1, name: 1 "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),a("p",[t._v("当有多个"),a("code",[t._v("sort")]),t._v("字段的时候，依次从左往右进行排序。")])]),a("h4",{attrs:{id:"注意事项-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意事项-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 注意事项")]),a("p",[t._v("在"),a("code",[t._v("find()")]),t._v("执行之后，在"),a("code",[t._v("sort")]),t._v("、"),a("code",[t._v("skip")]),t._v("和"),a("code",[t._v("limit")]),t._v("三种游标函数中，"),a("code",[t._v("sort")]),t._v("的优先级高于"),a("code",[t._v("skip")]),t._v("和"),a("code",[t._v("limit")]),t._v("，也就是先执行，其次就是"),a("code",[t._v("skip")]),t._v("的优先级高于"),a("code",[t._v("limit")]),t._v("。")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 先sort进行年龄升序排序，然后在sort结果中跳过前4条文档，最后限制输出2条文档。")]),t._v("\ndb.user.find"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".sort"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" age: 1 "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".limit"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("2"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".skip"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("4"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("和书写顺序无关。")])]),a("h4",{attrs:{id:"文档投影"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文档投影","aria-hidden":"true"}},[t._v("#")]),t._v(" 文档投影")]),a("p",[t._v("在"),a("a",{attrs:{href:"####find"}},[t._v("find")]),t._v("中，有另外一个参数"),a("code",[t._v("projection")]),t._v("可以用来选择性的返回文档中需要返回的字段，其语法为："),a("code",[t._v("db.dbName.find({}, { field: inclusion })")]),t._v("，其中"),a("code",[t._v("inclusion")]),t._v("的值为"),a("code",[t._v("1")]),t._v("或者"),a("code",[t._v("0")]),t._v("。")]),a("p",[a("code",[t._v("1")]),t._v("表示返回该字段，"),a("code",[t._v("0")]),t._v("表示不返回。")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 只返回张三的姓名和年龄")]),t._v("\ndb.user.find"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name: "),a("span",{attrs:{class:"token string"}},[t._v('"张三"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(", "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tname: 1,\n\tage: 1\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 返回的文档不需要_id字段")]),t._v("\ndb.user.find"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(", "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t_id: 0\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("div",{staticClass:"warning custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("注意哦")]),a("p",[t._v("不可以同时存在"),a("code",[t._v("1")]),t._v("和"),a("code",[t._v("0")]),t._v("，不然会报错。"),a("strong",[t._v("要么列出所有想显示的字段，要么列出所有不想显示的字段，切勿同时存在包含和不包含的关系， 主键"),a("code",[t._v("_id")]),t._v("除外。")])])]),a("h4",{attrs:{id:"数组投影"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组投影","aria-hidden":"true"}},[t._v("#")]),t._v(" 数组投影")]),a("h5",{attrs:{id:"slice"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#slice","aria-hidden":"true"}},[t._v("#")]),t._v(" $slice")]),a("p",[t._v("数组投影可以使用"),a("code",[t._v("$slice")]),t._v("关键字进行操作，具体语法为：")]),a("ul",[a("li",[a("code",[t._v("$slice: number")]),t._v(": 返回数组中指定位置的的数据，可为"),a("strong",[t._v("负数")]),t._v("，从尾部开始计数")]),a("li",[a("code",[t._v("$slice: [skip, limit]")]),t._v("： 跳过指定条数的数据，开始返回指定数量的数据。")])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 返回张三的第一个兴趣爱好")]),t._v("\ndb.user.find"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name: "),a("span",{attrs:{class:"token string"}},[t._v('"张三"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(", "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\thabbies: "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$slice")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" 1\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 返回张三第一个以外的其他两个兴趣")]),t._v("\ndb.user.find"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name: "),a("span",{attrs:{class:"token string"}},[t._v('"张三"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(", "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\thabbies: "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$slice")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("1, 2"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h5",{attrs:{id:"elemmatch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#elemmatch","aria-hidden":"true"}},[t._v("#")]),t._v(" $elemMatch")]),a("p",[t._v("也可以使用"),a("code",[t._v("$elemMatch")]),t._v("和"),a("code",[t._v("$操作符")]),t._v("进行投影操作：")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 如果兴趣中有篮球或者游泳，则返回该habbies字段")]),t._v("\ndb.user.find"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(", "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tname: 1,\n\thabbies: "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$elemMatch")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$in")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"篮球"')]),t._v(", "),a("span",{attrs:{class:"token string"}},[t._v('"游泳"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"更新文档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更新文档","aria-hidden":"true"}},[t._v("#")]),t._v(" 更新文档")]),a("h4",{attrs:{id:"update"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#update","aria-hidden":"true"}},[t._v("#")]),t._v(" update")]),a("h5",{attrs:{id:"语法-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法-6","aria-hidden":"true"}},[t._v("#")]),t._v(" 语法")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("db.dbName.update"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("query"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(", "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("update"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(", "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tupsert: "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("boolean"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(",\n\tmulti: "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("boolean"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# query 文档的筛选条件")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# update 文档的更新内容")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# options 文档更新操作的一些参数")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("## upsert 是否文档不存在时创建 默认为false")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("## multi 是否多文档更新，默认false")]),t._v("\n")])])]),a("h5",{attrs:{id:"更新操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更新操作符","aria-hidden":"true"}},[t._v("#")]),t._v(" 更新操作符")]),a("ul",[a("li",[a("code",[t._v("$set")]),t._v(": 更新字段")]),a("li",[a("code",[t._v("$unset")]),t._v(": 删除字段")]),a("li",[a("code",[t._v("$rename")]),t._v(": 重命名字段")]),a("li",[a("code",[t._v("$inc")]),t._v(": 加减字段值")]),a("li",[a("code",[t._v("$mul")]),t._v(": 相乘字段值")]),a("li",[a("code",[t._v("$min")]),t._v(": 经过比较后，取最小字段值")]),a("li",[a("code",[t._v("$max")]),t._v(": 经过比较后，取最大字段值")]),a("li",[a("code",[t._v("$addToSet")]),t._v(": 用于数组更新，插入新值")]),a("li",[a("code",[t._v("$pop")]),t._v(": 用于数组删除，只能删除第一个或者最后一个元素")]),a("li",[a("code",[t._v("$pull")]),t._v(": 用于数组删除，删除特定元素")]),a("li",[a("code",[t._v("$pullAll")]),t._v(": 用于数组删除，删除多个特定元素")]),a("li",[a("code",[t._v("$push")]),t._v(": 用于数组添加，添加元素，大体同"),a("code",[t._v("addToSet")]),t._v("，但比之更灵活。")])]),a("h5",{attrs:{id:"例子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例子","aria-hidden":"true"}},[t._v("#")]),t._v(" 例子")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 更新张三的年龄为24岁")]),t._v("\ndb.user.find"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name: "),a("span",{attrs:{class:"token string"}},[t._v('"张三"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(", "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tname: "),a("span",{attrs:{class:"token string"}},[t._v('"张三"')]),t._v(",\n\tage: 24\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 使用更新操作符")]),t._v("\ndb.user.find"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name: "),a("span",{attrs:{class:"token string"}},[t._v('"张三"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(", "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{attrs:{class:"token variable"}},[t._v("$set")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tage: 24\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 更新内嵌字段")]),t._v("\ndb.user.find"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name: "),a("span",{attrs:{class:"token string"}},[t._v('"张三"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(", "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{attrs:{class:"token variable"}},[t._v("$set")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{attrs:{class:"token string"}},[t._v('"info.age"')]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" 24\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 更新数组内的数据")]),t._v("\ndb.user.find"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name: "),a("span",{attrs:{class:"token string"}},[t._v('"张三"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(", "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{attrs:{class:"token variable"}},[t._v("$set")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{attrs:{class:"token comment"}},[t._v("# 更新张三的第一个兴趣为打游戏")]),t._v("\n\t\t"),a("span",{attrs:{class:"token string"}},[t._v('"habbies.0"')]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"打游戏"')]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# PS：如果修改的数组下标下不存在数据，则向数组追加数据，如果数组长度为3，添加的下标为6，跳过的数据则为null")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 删除张三的年龄")]),t._v("\ndb.user.find"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name: "),a("span",{attrs:{class:"token string"}},[t._v('"张三"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(", "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{attrs:{class:"token variable"}},[t._v("$unset")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tage: "),a("span",{attrs:{class:"token string"}},[t._v('""')]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# PS: unset 删除数组是让对应下标的数据变成null，并不改变原有数组的长度。")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 重命名张三的age为user_age")]),t._v("\ndb.user.find"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name: "),a("span",{attrs:{class:"token string"}},[t._v('"张三"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(", "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{attrs:{class:"token variable"}},[t._v("$rename")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tage: "),a("span",{attrs:{class:"token string"}},[t._v('"user_age"')]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# PS: 如果修改后的字段原本已经存在在数据集合中，那么那个已经存在的则会被删除。")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 让张三的年龄减小1岁")]),t._v("\ndb.user.find"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name: "),a("span",{attrs:{class:"token string"}},[t._v('"张三"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(", "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{attrs:{class:"token variable"}},[t._v("$inc")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tage: -1 "),a("span",{attrs:{class:"token comment"}},[t._v("# +1 表示原有的数值上+1")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 让张三的零花钱少一半")]),t._v("\ndb.user.find"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name: "),a("span",{attrs:{class:"token string"}},[t._v('"张三"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(", "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{attrs:{class:"token variable"}},[t._v("$mul")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tmoney: 0.5 "),a("span",{attrs:{class:"token comment"}},[t._v("# 会在原有数值上*0.5")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 如果张三的钱<我给的钱，则张三的钱 = 我给的钱")]),t._v("\ndb.user.find"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name: "),a("span",{attrs:{class:"token string"}},[t._v('"张三"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(", "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{attrs:{class:"token variable"}},[t._v("$max")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tmoney: 150 "),a("span",{attrs:{class:"token comment"}},[t._v("# 张三原有的money为100，小于我给的150，所以张三现在的money为150")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# min 取最小值")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 给张三的兴趣爱好添加一个读书")]),t._v("\ndb.user.find"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name: "),a("span",{attrs:{class:"token string"}},[t._v('"张三"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(", "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{attrs:{class:"token variable"}},[t._v("$addToSet")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\thabbies: "),a("span",{attrs:{class:"token string"}},[t._v('"读书"')]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("# 如果存在 则不更新。")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 给张三的兴趣添加读书和打电玩")]),t._v("\ndb.user.find"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name: "),a("span",{attrs:{class:"token string"}},[t._v('"张三"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(", "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{attrs:{class:"token variable"}},[t._v("$addToSet")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\thabbies: "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$each")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"读书"')]),t._v(", "),a("span",{attrs:{class:"token string"}},[t._v('"打电玩"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("# 添加多个的情况需要使用$each 不然会将整个数组当做一个值插入")]),t._v("\n\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 删除张三的最后一个兴趣")]),t._v("\ndb.user.find"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name: "),a("span",{attrs:{class:"token string"}},[t._v('"张三"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(", "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{attrs:{class:"token variable"}},[t._v("$pop")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\thabbies: 1 "),a("span",{attrs:{class:"token comment"}},[t._v("# -1 表示删除第一个值")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 删除兴趣里带有打字的兴趣")]),t._v("\ndb.user.find"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name: "),a("span",{attrs:{class:"token string"}},[t._v('"张三"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(", "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{attrs:{class:"token variable"}},[t._v("$pull")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\thabbies: "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$regex")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" /打/\n\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("div",{staticClass:"warning custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("注意事项")]),a("p",[t._v("当设置"),a("code",[t._v("update")]),t._v("的中的"),a("code",[t._v("multi")]),t._v("为"),a("code",[t._v("true")]),t._v("的时候，更新所有筛选到的文档，虽然都是在一个线程中执行，但是线程在执行的过程中是会被挂起的，别的线程也会有机会对他进行修改。")])]),a("h4",{attrs:{id:"findandmodify"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#findandmodify","aria-hidden":"true"}},[t._v("#")]),t._v(" findAndModify")]),a("p",[t._v("TODO。。")]),a("h4",{attrs:{id:"save-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#save-2","aria-hidden":"true"}},[t._v("#")]),t._v(" save")]),a("p",[t._v("如果"),a("code",[t._v("save")]),t._v("的文档中，包含了主键"),a("code",[t._v("_id")]),t._v("，那么，"),a("code",[t._v("save")]),t._v("调用的其实就是"),a("code",[t._v("update")]),t._v("操作，进行更新操作，且"),a("code",[t._v("upsert")]),t._v("会被设置为"),a("code",[t._v("true")]),t._v("。")]),a("h3",{attrs:{id:"删除文档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除文档","aria-hidden":"true"}},[t._v("#")]),t._v(" 删除文档")]),a("h4",{attrs:{id:"remove"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#remove","aria-hidden":"true"}},[t._v("#")]),t._v(" remove")]),a("h5",{attrs:{id:"语法-7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法-7","aria-hidden":"true"}},[t._v("#")]),t._v(" 语法")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("db.dbName.remove"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("query"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(", "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tjustOne: "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("boolean"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# query 查询条件")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# options 操作参数")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("## justOne 是否只删除一个文档 默认为false")]),t._v("\n")])])]),a("h5",{attrs:{id:"示例-8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例-8","aria-hidden":"true"}},[t._v("#")]),t._v(" 示例")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 删除年龄为24的用户")]),t._v("\ndb.user.remove"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" age: 24 "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 删除年龄小于20岁的用户")]),t._v("\ndb.user.remove"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" age: "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{attrs:{class:"token variable"}},[t._v("$lt")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" 20\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 删除年龄小于20岁的第一个用户")]),t._v("\ndb.user.remove"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" age: "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{attrs:{class:"token variable"}},[t._v("$lt")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" 20\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(", "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tjustOne: "),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 删除所有数据")]),t._v("\ndb.user.remove"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"drop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#drop","aria-hidden":"true"}},[t._v("#")]),t._v(" drop")]),a("h5",{attrs:{id:"语法-8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法-8","aria-hidden":"true"}},[t._v("#")]),t._v(" 语法")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("db.dbName.drop"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" writeConcern: "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("document"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# writeConcern: 删除操作的安全写级别")]),t._v("\n")])])]),a("h5",{attrs:{id:"示例-9"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例-9","aria-hidden":"true"}},[t._v("#")]),t._v(" 示例")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 删除用户表")]),t._v("\ndb.user.drop"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"数据聚合操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据聚合操作","aria-hidden":"true"}},[t._v("#")]),t._v(" 数据聚合操作")]),a("h3",{attrs:{id:"aggregate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aggregate","aria-hidden":"true"}},[t._v("#")]),t._v(" aggregate")]),a("h4",{attrs:{id:"语法-9"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法-9","aria-hidden":"true"}},[t._v("#")]),t._v(" 语法")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("db.dbName.aggregate"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("pipeline"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(", "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tallowDiskUse: "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("boolean"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# pipeline 定义了操作中使用的聚合管道阶段和聚合操作符")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# options 聚合操作参数")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("## allowDiskUse 允许每个聚合管道操作超出内存上限(100MB)时，将操作数据写入临时文件")]),t._v("\n")])])]),a("h4",{attrs:{id:"表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#表达式","aria-hidden":"true"}},[t._v("#")]),t._v(" 表达式")]),a("h5",{attrs:{id:"字段路径表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字段路径表达式","aria-hidden":"true"}},[t._v("#")]),t._v(" 字段路径表达式")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 字段路径表达式")]),t._v("\n$"),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("field"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("# 使用$来指示字段路径")]),t._v("\n$"),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("field"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("."),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("sub-field"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("# 使用$和.来指示内嵌文档字段路径")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 举例")]),t._v("\n"),a("span",{attrs:{class:"token variable"}},[t._v("$name")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("# 指示姓名字段")]),t._v("\n"),a("span",{attrs:{class:"token variable"}},[t._v("$info")]),t._v(".age "),a("span",{attrs:{class:"token comment"}},[t._v("# 指示用户信息中的年龄字段")]),t._v("\n")])])]),a("h5",{attrs:{id:"系统变量表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#系统变量表达式","aria-hidden":"true"}},[t._v("#")]),t._v(" 系统变量表达式")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 系统字段表达式")]),t._v("\n$$"),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("variable"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("# 使用$$来指示系统变量")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 举例")]),t._v("\n$"),a("span",{attrs:{class:"token variable"}},[t._v("$CURRENT")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("# 指示管道中当前操作的文档")]),t._v("\n$"),a("span",{attrs:{class:"token variable"}},[t._v("$CURRENT")]),t._v("."),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("field"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("# 和$<field>是等效的")]),t._v("\n")])])]),a("h5",{attrs:{id:"常量表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常量表达式","aria-hidden":"true"}},[t._v("#")]),t._v(" 常量表达式")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 常量表达式")]),t._v("\n"),a("span",{attrs:{class:"token variable"}},[t._v("$literal")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("value"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("# 指示常量value")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 举例")]),t._v("\n"),a("span",{attrs:{class:"token variable"}},[t._v("$literal")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$name")]),t._v('"')]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('# 指示常量字符串 "$name"')]),t._v("\n\t\t\t\t\t\t\t\t\t"),a("span",{attrs:{class:"token comment"}},[t._v("# 这里的$被当做常量处理，而不是字段路径表达式")]),t._v("\n")])])]),a("h4",{attrs:{id:"聚合管道阶段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#聚合管道阶段","aria-hidden":"true"}},[t._v("#")]),t._v(" 聚合管道阶段")]),a("p",[t._v("先创建点数据，方便以下例子使用：")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("db.user.insert"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tname: "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" firstName: "),a("span",{attrs:{class:"token string"}},[t._v('"Zhang"')]),t._v(", lastName: "),a("span",{attrs:{class:"token string"}},[t._v('"san"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t\tage: 22,\n\t\tmoney: 1000\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tname: "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" firstName: "),a("span",{attrs:{class:"token string"}},[t._v('"Li"')]),t._v(", lastName: "),a("span",{attrs:{class:"token string"}},[t._v('"si"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t\tage: 20,\n\t\tmoney: 1500\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h5",{attrs:{id:"project"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#project","aria-hidden":"true"}},[t._v("#")]),t._v(" $project")]),a("blockquote",[a("p",[t._v("对输入的文档再次投影，控制文档的格式输出")])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 返回用户的存款和姓氏")]),t._v("\ndb.user.aggregate"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$project")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t_id: 0,\n\t\t\tuser: "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$name")]),t._v('.firstName"')]),t._v(",\n\t\t\tmoney: 1\n\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# output")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v('# { user: "Zhang", money: 1000 }')]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v('# { user: "Li", money: 1500 }')]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 使用$concat进行字段拼接")]),t._v("\ndb.user.aggregate"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$project")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t_id: 0,\n\t\t\tuser: "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$concat")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$name")]),t._v('.firstName"')]),t._v(", "),a("span",{attrs:{class:"token string"}},[t._v('" "')]),t._v(", "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$name")]),t._v('.lastName"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t\t\tmoney: 1\n\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# output")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v('# { user: "Zhang san", money: 1000 }')]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v('# { user: "Li si", money: 1500 }')]),t._v("\n")])])]),a("h5",{attrs:{id:"match"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#match","aria-hidden":"true"}},[t._v("#")]),t._v(" $match")]),a("blockquote",[a("p",[t._v("对输入的文档进行筛选，和读取文档的筛选语法一样")])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 在管道中获取姓氏中为Zhang的用户")]),t._v("\ndb.user.aggregate"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$match")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$name")]),t._v('.firstName"')]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"Zhang"')]),t._v("\n\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# output")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v('# { _id: ObjectId(xxx), name: { firstName: "Zhang", lastName: "san" }, age: 22, money: 1000 }')]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 多条件筛选")]),t._v("\ndb.user.aggregate"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$match")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$or")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t\t\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\tmoney: "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$gt")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" 800, "),a("span",{attrs:{class:"token variable"}},[t._v("$lt")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" 1200"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t\t\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t"),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$name")]),t._v('.firstName"')]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"Li"')]),t._v("\n\t\t\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# output")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v('# { _id: ObjectId(xxx), name: { firstName: "Zhang", lastName: "san" }, age: 22, money: 1000 }')]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v('# { _id: ObjectId(xxx), name: { firstName: "Li", lastName: "si" }, age: 20, money: 1500 }')]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# PS: $match 并不会修改原有的数据格式。")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 配合project使用")]),t._v("\ndb.user.aggregate"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$match")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$name")]),t._v('.firstName"')]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"Zhang"')]),t._v("\n\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$project")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t_id: 0,\n\t\t\tuser: "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$name")]),t._v('.firstName"')]),t._v(",\n\t\t\tmoney: 1\n\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# output")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v('# { user: "Zhang", money: 1000 }')]),t._v("\n")])])]),a("h5",{attrs:{id:"limit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#limit","aria-hidden":"true"}},[t._v("#")]),t._v(" $limit")]),a("blockquote",[a("p",[t._v("筛选管道内前N篇文档")])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 筛选第一个用户")]),t._v("\ndb.user.aggregate"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$limit")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" 1\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# output")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v('# { _id: ObjectId(xxx), name: { firstName: "Zhang", lastName: "san" }, age: 22, money: 1000 }')]),t._v("\n")])])]),a("h5",{attrs:{id:"skip"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#skip","aria-hidden":"true"}},[t._v("#")]),t._v(" $skip")]),a("blockquote",[a("p",[t._v("跳过管道内前N篇文档")])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 跳过第一个用户")]),t._v("\ndb.user.aggregate"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$skip")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" 1\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# output")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v('# { _id: ObjectId(xxx), name: { firstName: "Li", lastName: "si" }, age: 20, money: 1500 }')]),t._v("\n")])])]),a("h5",{attrs:{id:"unwind"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unwind","aria-hidden":"true"}},[t._v("#")]),t._v(" $unwind")]),a("blockquote",[a("p",[t._v("展开输入文档中的数组字段")])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 新增字段currency")]),t._v("\ndb.user.update"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{attrs:{class:"token string"}},[t._v('"name.firstName"')]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"Zhang"')]),t._v(",\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(", "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{attrs:{class:"token variable"}},[t._v("$set")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tcurrency: "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"CNY"')]),t._v(", "),a("span",{attrs:{class:"token string"}},[t._v('"USD"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ndb.user.update"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{attrs:{class:"token string"}},[t._v('"name.firstName"')]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"Li"')]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(", "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{attrs:{class:"token variable"}},[t._v("$set")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tcurrency: "),a("span",{attrs:{class:"token string"}},[t._v('"GBP"')]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 展开数据中的货币数组")]),t._v("\ndb.user.aggregate"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$unwind")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tpath: "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$currency")]),t._v('"')]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("# path 指向需要展开的数组字段")]),t._v("\n\t\t\t"),a("span",{attrs:{class:"token comment"}},[t._v('#includeArrayIndex: "ccyIndex" 展开数组时，显示对应的下标字段，值为对应的索引。如果path指向的非数组，该字段的值则为null')]),t._v("\n\t\t\t"),a("span",{attrs:{class:"token comment"}},[t._v("#preserveNullAndEmptyArrays: true 不过滤那些path指向的字段值为null或者为空数组[]或者不存在的数据。")]),t._v("\n\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# output")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v('# { _id: ObjectId(xxx), name: { firstName: "Zhang", lastName: "san" }, age: 22, money: 1000, currency: "CNY" }')]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v('# { _id: ObjectId(xxx), name: { firstName: "Zhang", lastName: "san" }, age: 22, money: 1000, currency: "USD" }')]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v('# { _id: ObjectId(xxx), name: { firstName: "Li", lastName: "si" }, age: 20, money: 1500, currency: "GBP" }')]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# PS：unwind是将数组拆分成单独的一条数据 由数组->字符串")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# PS：unwind展开的数组字段如果不存在或者为空数组[]，或者为null，则unwind会过滤这些数据。如不想过滤，设置preserveNullAndEmptyArrays为true即可。不存在和数组为空的情况下，打印出的数据不会包含指向字段，null的情况则会打印字段并且值为null。")]),t._v("\n")])])]),a("h5",{attrs:{id:"sort"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sort","aria-hidden":"true"}},[t._v("#")]),t._v(" $sort")]),a("blockquote",[a("p",[t._v("对输入的文档进行排序")])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 对年龄进行排序")]),t._v("\ndb.user.aggregate"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$sort")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$age")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" 1 "),a("span",{attrs:{class:"token comment"}},[t._v("# 由小到大排序")]),t._v("\n\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 先对年龄升序排序，再对收入降序排序")]),t._v("\ndb.user.aggregate"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$sort")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$age")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" 1, "),a("span",{attrs:{class:"token comment"}},[t._v("# 升序")]),t._v("\n\t\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$money")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" -1 "),a("span",{attrs:{class:"token comment"}},[t._v("# 降序")]),t._v("\n\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h5",{attrs:{id:"lookup"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lookup","aria-hidden":"true"}},[t._v("#")]),t._v(" $lookup")]),a("blockquote",[a("p",[t._v("对输入的文档进行查询操作，可以对非管道数据集进行操作。")])]),a("h6",{attrs:{id:"简单查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单查询","aria-hidden":"true"}},[t._v("#")]),t._v(" 简单查询")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 基本语法")]),t._v("\n"),a("span",{attrs:{class:"token variable"}},[t._v("$lookup")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{attrs:{class:"token comment"}},[t._v("# 同一数据库中的另一个集合(表)")]),t._v("\n\tfrom: "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("collection to join"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(",\n\t"),a("span",{attrs:{class:"token comment"}},[t._v("# 管道中希望用来去查询的字段名")]),t._v("\n\tlocalField: "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("field from the input documents"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(",\n\t"),a("span",{attrs:{class:"token comment"}},[t._v("# 查询from集合中的查询字段")]),t._v("\n\tforeignField: "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("field from the documents of the "),a("span",{attrs:{class:"token string"}},[t._v('"from"')]),t._v(" collection"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(",\n\t"),a("span",{attrs:{class:"token comment"}},[t._v("# 把查询到的结果写入管道中的自定义的字段中 该字段是数组类型")]),t._v("\n\tas: "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("output array field"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 增加一个额外的集合(表)forex")]),t._v("\ndb.forex.insert"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tccy: "),a("span",{attrs:{class:"token string"}},[t._v('"USD"')]),t._v(",\n\t\trate: 6.91\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tccy: "),a("span",{attrs:{class:"token string"}},[t._v('"GBP"')]),t._v(",\n\t\trate: 8.72\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tccy: "),a("span",{attrs:{class:"token string"}},[t._v('"CNY"')]),t._v(",\n\t\trate: 1.0\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 查询汇率写入对应的用户表中")]),t._v("\ndb.user.aggregate"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$unwind")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tpath: "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$currency")]),t._v('"')]),t._v("\n\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$lookup")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tfrom: "),a("span",{attrs:{class:"token string"}},[t._v('"forex"')]),t._v(",\n\t\t\tlocalField: "),a("span",{attrs:{class:"token string"}},[t._v('"currency"')]),t._v(",\n\t\t\tforeignField: "),a("span",{attrs:{class:"token string"}},[t._v('"ccy"')]),t._v(",\n\t\t\tas: "),a("span",{attrs:{class:"token string"}},[t._v('"forexRate"')]),t._v("\n\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$project")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t_id: 0,\n\t\t\tuser: "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$name")]),t._v('.firstName"')]),t._v(",\n\t\t\tcurrency: 1\n\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# output")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v('# { user: "Zhang", currency: "USD", forexRate: [{ ccy: "USD", rate: 6.91 }] }')]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v('# { user: "Zhang", currency: "CNY", forexRate: [{ ccy: "CNY", rate: 1.0 }] }')]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v('# { user: "Li", currency: "GBP", forexRate: [{ ccy: "GBP", rate: 8.72 }] }')]),t._v("\n")])])]),a("h6",{attrs:{id:"复杂查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#复杂查询","aria-hidden":"true"}},[t._v("#")]),t._v(" 复杂查询")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 基本语法")]),t._v("\n"),a("span",{attrs:{class:"token variable"}},[t._v("$lookup")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{attrs:{class:"token comment"}},[t._v("# 同一数据库中的其他集合(表)")]),t._v("\n\tfrom: "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("collection to join"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(",\n\t"),a("span",{attrs:{class:"token comment"}},[t._v("# 对原有管道的中需要在pipeline中使用的字段进行声明，如没有 可省略")]),t._v("\n\tlet: "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("var_1"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(": "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("expression"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(", "),a("span",{attrs:{class:"token punctuation"}},[t._v("..")]),t._v(", "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("var_n"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(": "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("expression"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t"),a("span",{attrs:{class:"token comment"}},[t._v("# 对from集合进行聚合处理，该管道中无法使用原有管道的字段变量，如需使用，则需要再let中声明")]),t._v("\n\tpipeline: "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("pipeline to execute on the collection to join"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n\t"),a("span",{attrs:{class:"token comment"}},[t._v("# 把查询到的结果写入管道中的自定义的字段中 该字段是数组类型")]),t._v("\n\tas: "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("output array field"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 将汇率大于7的写入用户表")]),t._v("\ndb.user.aggregate"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$project")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t_id: 0,\n\t\t\tuser: "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$name")]),t._v('.firstName"')]),t._v(",\n\t\t\tcurrency: 1\n\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$unwind")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tpath: "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$currency")]),t._v('"')]),t._v("\n\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$lookup")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tfrom: "),a("span",{attrs:{class:"token string"}},[t._v('"forex"')]),t._v(",\n\t\t\tpipeline: "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t\t\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$match")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t\trate: "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$gt")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" 7\n\t\t\t\t\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n\t\t\tas: "),a("span",{attrs:{class:"token string"}},[t._v('"forexRate"')]),t._v("\n\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# output 会发现结果是无差别写入")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v('# { user: "Zhang", currency: "USD", forexRate: [{ ccy: "GBP", rate: 8.72 }] }')]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v('# { user: "Zhang", currency: "CNY", forexRate: [{ ccy: "GBP", rate: 8.72 }] }')]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v('# { user: "Li", currency: "GBP", forexRate: [{ ccy: "GBP", rate: 8.72 }] }')]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 为currency为USD的写入汇率大于7的数据")]),t._v("\ndb.user.aggregate"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$project")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t_id: 0,\n\t\t\tuser: "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$name")]),t._v('.firstName"')]),t._v(",\n\t\t\tcurrency: 1\n\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$unwind")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\tpath: "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$currency")]),t._v('"')]),t._v("\n\t\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$lookup")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\tfrom "),a("span",{attrs:{class:"token string"}},[t._v('"forex"')]),t._v(",\n\t\t\t\tlet: "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" cry: "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$currency")]),t._v('"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t\t\t\tpipeline: "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t\t\t\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$match")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t\t\t"),a("span",{attrs:{class:"token comment"}},[t._v("# 当使用let声明系统变量的时候，需要使用expr才可以调用到")]),t._v("\n\t\t\t\t\t\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$expr")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t\t\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$and")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t\t\t\t\t\t\t\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t\t\t\t\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$eq")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"$'),a("span",{attrs:{class:"token variable"}},[t._v("$cry")]),t._v('"')]),t._v(", "),a("span",{attrs:{class:"token string"}},[t._v('"USD"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("# 使用let中声明的系统变量cry")]),t._v("\n\t\t\t\t\t\t\t\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t\t\t\t\t\t\t\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t\t\t\t\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$gt")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$rate")]),t._v('"')]),t._v(", 7"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("# 使用from集合中的字段变量")]),t._v("\n\t\t\t\t\t\t\t\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t\t\t\t\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t\t\t\t\t\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t\t\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n\t\t\t\tas: "),a("span",{attrs:{class:"token string"}},[t._v('"forexRate"')]),t._v("\n\t\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# output")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v('# { user: "Zhang", currency: "USD", forexRate: [{ ccy: "GBP", rate: 8.72 }] }')]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v('# { user: "Zhang", currency: "CNY", forexRate: [] }')]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v('# { user: "Li", currency: "GBP", forexRate: [] }')]),t._v("\n")])])]),a("h5",{attrs:{id:"group"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#group","aria-hidden":"true"}},[t._v("#")]),t._v(" $group")]),a("blockquote",[a("p",[t._v("对输入的文档进行分组")]),a("p",[t._v("在不使用管道操作符的情况下，可以返回管道文档中某一值的不重复值")])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 语法")]),t._v("\n"),a("span",{attrs:{class:"token variable"}},[t._v("$group")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t_id: "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("expression"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(", "),a("span",{attrs:{class:"token comment"}},[t._v("# 必须要的参数 用于定义分组规则")]),t._v("\n\t"),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("field1"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(": "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("accumulator1"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("expression1"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(", "),a("span",{attrs:{class:"token comment"}},[t._v("# 使用聚合操作符定义新字段")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 定义一个交易集合")]),t._v("\ndb.transactions.insert"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tsymbol: "),a("span",{attrs:{class:"token string"}},[t._v('"10023"')]),t._v(",\n\t\tqty: 100,\n\t\tprice: 567.4,\n\t\tcurrency: "),a("span",{attrs:{class:"token string"}},[t._v('"CNY"')]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tsymbol: "),a("span",{attrs:{class:"token string"}},[t._v('"AMZN"')]),t._v(",\n\t\tqty: 1,\n\t\tprice: 1377.5,\n\t\tcurrency: "),a("span",{attrs:{class:"token string"}},[t._v('"USD"')]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tsymbol: "),a("span",{attrs:{class:"token string"}},[t._v('"AAPL"')]),t._v(",\n\t\tqty: 20,\n\t\tprice: 150.7,\n\t\tcurrency: "),a("span",{attrs:{class:"token string"}},[t._v('"USD"')]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 简单示例")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 针对交易集合中的币种进行分组")]),t._v("\ndb.transactions.aggregate"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$group")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t_id: "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$currency")]),t._v('"')]),t._v("\n\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("#output")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v('# { _id: "CNY" }')]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v('# { _id: "USD" }')]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 分组统计")]),t._v("\ndb.transactions.aggregate"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$group")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t_id: "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$currency")]),t._v('"')]),t._v(",\n\t\t\ttotalQty: "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$sum")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$qty")]),t._v('"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t\t\ttotalNotional: "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$sum")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$multiply")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$price")]),t._v('"')]),t._v(", "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$qty")]),t._v('"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t\t\tavgPrice: "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$avg")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$price")]),t._v('"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t\t\tcount: "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$sum")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" 1 "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t\t\tmaxNotional: "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$max")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$multiply")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$price")]),t._v('"')]),t._v(", "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$qty")]),t._v('"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t\t\tminNotional: "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$min")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$multiply")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$price")]),t._v('"')]),t._v(", "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$qty")]),t._v('"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# output")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v('# { "_id" : "USD", "totalQty" : 21.0, "totalNotional" : 4391.5, "avgPrice" : 764.1, "count" : 2.0, "maxNotional" : 3014.0, "minNotional" : 1377.5 }')]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v('# { "_id" : "CNY", "totalQty" : 100.0, "totalNotional" : 56740.0, "avgPrice" : 567.4, "count" : 1.0, "maxNotional" : 56740.0, "minNotional" : 56740.0 }')]),t._v("\n")])])]),a("h5",{attrs:{id:"out"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#out","aria-hidden":"true"}},[t._v("#")]),t._v(" $out")]),a("blockquote",[a("p",[t._v("将管道内的文档输出")])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 输出统计信息")]),t._v("\ndb.transactions.aggregate"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$group")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t_id: "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$currency")]),t._v('"')]),t._v(",\n\t\t\ttotalQty: "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$sum")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$qty")]),t._v('"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t\t\ttotalNotional: "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$sum")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$multiply")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$price")]),t._v('"')]),t._v(", "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$qty")]),t._v('"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t\t\tavgPrice: "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$avg")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$price")]),t._v('"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t\t\tcount: "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$sum")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" 1 "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t\t\tmaxNotional: "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$max")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$multiply")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$price")]),t._v('"')]),t._v(", "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$qty")]),t._v('"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t\t\tminNotional: "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$min")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$multiply")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$price")]),t._v('"')]),t._v(", "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token variable"}},[t._v("$qty")]),t._v('"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{attrs:{class:"token variable"}},[t._v("$out")]),a("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"output"')]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("# 输出结果到新的集合(表)output中。")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# PS：如果该集合(表)已经存在，则会在保留索引的情况下，清空数据，再插入新保存的数据")]),t._v("\n")])])]),a("h4",{attrs:{id:"优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优化","aria-hidden":"true"}},[t._v("#")]),t._v(" 优化")]),a("ul",[a("li",[t._v("在有"),a("code",[t._v("$match")]),t._v("的时候，尽量保证"),a("code",[t._v("$match")]),t._v("的执行先于其他管道操作。因为"),a("code",[t._v("$match")]),t._v("阶段，会对管道文档进行筛选，减少管道中的文档数量，数量越少，调整效率越快。")]),a("li",[t._v("在"),a("code",[t._v("$skip")]),t._v("和"),a("code",[t._v("$project")]),t._v("都存在的情况下，保证"),a("code",[t._v("$skip")]),t._v("的操作优先于"),a("code",[t._v("$project")]),t._v("。"),a("code",[t._v("$skip")]),t._v("用于跳过文档，避免对要跳过的文档做完操作后再去"),a("code",[t._v("skip")]),t._v("，也是提升效率的一种。")]),a("li",[t._v("其实"),a("code",[t._v("mongodb")]),t._v("都会自动保证这些的优先级。")])]),a("h2",{attrs:{id:"索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#索引","aria-hidden":"true"}},[t._v("#")]),t._v(" 索引")]),a("p",[t._v("索引就是给指定字段进行排序的数据结构，给数据集合(表)创建索引，能够大大提高数据库搜索性能。")]),a("h3",{attrs:{id:"操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作","aria-hidden":"true"}},[t._v("#")]),t._v(" 操作")]),a("h4",{attrs:{id:"createindex"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#createindex","aria-hidden":"true"}},[t._v("#")]),t._v(" createIndex")]),a("h5",{attrs:{id:"语法-10"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法-10","aria-hidden":"true"}},[t._v("#")]),t._v(" 语法")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("db.dbName.createIndex"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("keys"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(", "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tunique: "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("boolean"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(",\n\tsparse: "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("boolean"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(",\n\texpireAfterSeconds: "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("number"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# keys 索引字段")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# options 创建索引操作的参数")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("## unique 索引的唯一性 默认为false")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("## sparse 索引的稀疏性 只将包含索引字段的文档加入到索引集合中 默认为false")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("## expireAfterSeconds 索引的可生存时间 单位秒")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# PS：复合键索引也可以具有稀疏性，只有在缺失复合键所包含的所有字段的情况下，文档才不会加入到索引中")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# PS：复合键索引不具备生存时间特性")]),t._v("\n")])])]),a("h5",{attrs:{id:"示例-10"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例-10","aria-hidden":"true"}},[t._v("#")]),t._v(" 示例")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 创建数据")]),t._v("\ndb.demoIndex.insert"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tname: "),a("span",{attrs:{class:"token string"}},[t._v('"blob"')]),t._v(",\n\t\tbalance: 100,\n\t\tcurrency: "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"CNY"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tname: "),a("span",{attrs:{class:"token string"}},[t._v('"lucy"')]),t._v(",\n\t\tbalance: 200,\n\t\tcurrency: "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"AUD"')]),t._v(", "),a("span",{attrs:{class:"token string"}},[t._v('"USD"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tname: "),a("span",{attrs:{class:"token string"}},[t._v('"andy"')]),t._v(",\n\t\tbalance: 50,\n\t\tcurrency: "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"GBP"')]),t._v(", "),a("span",{attrs:{class:"token string"}},[t._v('"CNY"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 为demoIndex集合创建单键索引")]),t._v("\ndb.demoIndex.createIndex"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name: 1 "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 为demoIndex集合创建一个复合键索引")]),t._v("\ndb.demoIndex.createIndex"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name: 1, balance: -1 "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 为demoIndex集合创建一个多建索引")]),t._v("\ndb.demoIndex.createIndex"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" currency: 1 "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),a("div",{staticClass:"warning custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),a("ul",[a("li",[a("strong",[t._v("多键索引")]),t._v("只能给数组建立，多键索引会给数组的每一个元素创建一个键。")]),a("li",[a("code",[t._v("1")]),t._v("表示索引字段按升序排列，"),a("code",[t._v("-1")]),t._v("表示索引字段按降序排列")])])]),a("h4",{attrs:{id:"getindexes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getindexes","aria-hidden":"true"}},[t._v("#")]),t._v(" getIndexes")]),a("p",[t._v("获取集合索引信息")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 获取demoIndex的索引信息")]),t._v("\ndb.demoIndex.getIndexes"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"dropindex"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dropindex","aria-hidden":"true"}},[t._v("#")]),t._v(" dropIndex")]),a("p",[t._v("删除索引信息")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 删除demoIndex的索引")]),t._v("\ndb.demoIndex.dropIndex"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("keys "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" name"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# keys 索引的字段信息")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# name 索引name 可以通过getIndexes获取到")]),t._v("\n")])])]),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),a("p",[t._v("如果需要更改索引，只能通过删除索引后重新建立。")])]),a("h4",{attrs:{id:"explain"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#explain","aria-hidden":"true"}},[t._v("#")]),t._v(" explain")]),a("p",[t._v("用于查看建立索引后的效果。")]),a("h5",{attrs:{id:"语法-11"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法-11","aria-hidden":"true"}},[t._v("#")]),t._v(" 语法")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("db.dbName.explain"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("."),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("method"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# method 用于查看索引效果的方法，包括find()、count()、aggregate()、distinct()、group()、remove()、update()。")]),t._v("\n")])])]),a("h5",{attrs:{id:"示例-11"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例-11","aria-hidden":"true"}},[t._v("#")]),t._v(" 示例")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 使用没有创建索引的字段进行搜索")]),t._v("\ndb.demoIndex.explain"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".find"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" balance: 100 "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 主要观察返回信息中的queryPlanner.winningPlan.stage字段")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("## COLLSCAN 效率最低，通常需要循环遍历整个文档")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("## PROJECTION 效率最高")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("## FETCH 命中索引，效率一般")]),t._v("\n")])])]),a("h2",{attrs:{id:"数据模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据模型","aria-hidden":"true"}},[t._v("#")]),t._v(" 数据模型")]),a("h3",{attrs:{id:"文档结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文档结构","aria-hidden":"true"}},[t._v("#")]),t._v(" 文档结构")]),a("h4",{attrs:{id:"内嵌式文档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内嵌式文档","aria-hidden":"true"}},[t._v("#")]),t._v(" 内嵌式文档")]),a("p",[t._v("内嵌式文档，一般指在一个文档中，还会存在其他子文档，比如：")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tname: "),a("span",{attrs:{class:"token string"}},[t._v('"张三"')]),t._v(",\n\tinfo: "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tage: 22,\n\t\thabbies: "),a("span",{attrs:{class:"token string"}},[t._v('"篮球"')]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# info为子文档 也就是内嵌文档。")]),t._v("\n")])])]),a("h4",{attrs:{id:"规范式文档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#规范式文档","aria-hidden":"true"}},[t._v("#")]),t._v(" 规范式文档")]),a("p",[t._v("规范式文档就是，将顶层文档中的一些子文档提取出来存放在一个新的文档中，通过"),a("code",[t._v("ObjectId")]),t._v("进行关联，这样做能够有效的减少一些重复子文档。")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 文档一")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tcourse: "),a("span",{attrs:{class:"token string"}},[t._v('"篮球课"')]),t._v(",\n\tuser: "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("ObjectId_1"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tcourse: "),a("span",{attrs:{class:"token string"}},[t._v('"乒乓球课"')]),t._v(",\n\tuser: "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("ObjectId_1"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 文档二")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tid: "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("ObjectId_1"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(",\n\tname: "),a("span",{attrs:{class:"token string"}},[t._v('"张三"')]),t._v(",\n\tage: 22\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 可能会存在一个人选多门课程 将用户的文档提取出来 通过ObjectId和顶层课程文档进行关联。")]),t._v("\n")])])]),a("h3",{attrs:{id:"文档关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文档关系","aria-hidden":"true"}},[t._v("#")]),t._v(" 文档关系")]),a("h4",{attrs:{id:"一对一"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一对一","aria-hidden":"true"}},[t._v("#")]),t._v(" 一对一")]),a("p",[t._v("使用内嵌文档的"),a("strong",[t._v("好处")]),t._v("：")]),a("ul",[a("li",[t._v("一次查询就可以返回所有需要用的信息")]),a("li",[t._v("更具有独立性的数据作为顶层文档")]),a("li",[t._v("补充性的数据作为内嵌文档")])]),a("h4",{attrs:{id:"一对多"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一对多","aria-hidden":"true"}},[t._v("#")]),t._v(" 一对多")]),a("p",[t._v("使用内嵌文档的"),a("strong",[t._v("好处")]),t._v("：")]),a("ul",[a("li",[t._v("一次查询就可以得到所有需要用的信息")])]),a("p",[t._v("使用内嵌文档的"),a("strong",[t._v("缺点")]),t._v("：")]),a("ul",[a("li",[t._v("更新内嵌文档的复杂度增高")])]),a("p",[t._v("使用规范式文档的"),a("strong",[t._v("好处")]),t._v("：")]),a("ul",[a("li",[t._v("减少了重复数据")]),a("li",[t._v("降低了文档更新的复杂度")])]),a("p",[t._v("使用规范式文档的"),a("strong",[t._v("缺点")]),t._v("：")]),a("ul",[a("li",[t._v("需要多次查询才能得到完整的数据")])]),a("h2",{attrs:{id:"数据复制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据复制","aria-hidden":"true"}},[t._v("#")]),t._v(" 数据复制")]),a("ul",[a("li",[t._v("高可用性")]),a("li",[t._v("数据安全")]),a("li",[t._v("分流/分工")])]),a("h3",{attrs:{id:"复制集"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#复制集","aria-hidden":"true"}},[t._v("#")]),t._v(" 复制集")]),a("p",[t._v("在复制集节点中，会存在一个"),a("strong",[t._v("主节点")]),t._v("，"),a("strong",[t._v("主节点")]),t._v("主要负责的是所有数据的写入请求。")]),a("p",[t._v("而"),a("strong",[t._v("主节点")]),t._v("底下会存在若干个"),a("strong",[t._v("副节点")]),t._v("，"),a("strong",[t._v("副节点")]),t._v("会不断的从"),a("strong",[t._v("主节点")]),t._v("（或者其他符合条件的副节点）中复制数据，该步骤是异步的。")]),a("p",[a("strong",[t._v("主副节点")]),t._v("都可以处理"),a("strong",[t._v("读取")]),t._v("的请求。")]),a("p",[t._v("每个节点之间都会相互发送一个"),a("strong",[t._v("心跳请求")]),t._v("，用于"),a("strong",[t._v("检测节点之间的健康情况")]),t._v("。")]),a("p",[t._v("默认情况下，节点之间会"),a("strong",[t._v("每隔2秒发送一次心跳请求，超过10秒无响应的，则表示该节点出现故障")]),t._v("。")]),a("p",[t._v("一个复制集中最多"),a("strong",[t._v("只能存在50个节点")]),t._v("。")]),a("p",[t._v("如果"),a("strong",[t._v("主节点")]),t._v("故障了，那么MongoDB则会通过内部的一个"),a("strong",[t._v("选举算法")]),t._v("，从副节点中选出一个成为新的主节点。")]),a("h3",{attrs:{id:"示例-12"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例-12","aria-hidden":"true"}},[t._v("#")]),t._v(" 示例")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 假设已经存在三个mongodb数据库 在不同的服务/端口下")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 创建一个拥有三个节点的数据集")]),t._v("\nrs.initiate"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t_id: "),a("span",{attrs:{class:"token string"}},[t._v('"mytest"')]),t._v(",\n\tmembers: "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t_id: 0,\n\t\t\thost: "),a("span",{attrs:{class:"token string"}},[t._v('"mongo1:27017"')]),t._v("\n\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t_id: 1,\n\t\t\thost: "),a("span",{attrs:{class:"token string"}},[t._v('"mongo2:27018"')]),t._v("\n\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t_id: 2,\n\t\t\thost: "),a("span",{attrs:{class:"token string"}},[t._v('"mongo3:27019"')]),t._v("\n\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 查看复制集的状态")]),t._v("\nrs.status"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"数据库分片"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库分片","aria-hidden":"true"}},[t._v("#")]),t._v(" 数据库分片")]),a("h3",{attrs:{id:"介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#介绍","aria-hidden":"true"}},[t._v("#")]),t._v(" 介绍")]),a("p",[t._v("数据库分片，简单说就是将整个数据库的数据分成一个个子集，然后将每个子集存储在分片上，最终这些分片集群合在一起就是这个数据库完整的数据。")]),a("p",[t._v("每个数据库分片是能够运行在不同的服务器中的，从而提高数据库的可拓展性。")]),a("h3",{attrs:{id:"分片集群的构成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分片集群的构成","aria-hidden":"true"}},[t._v("#")]),t._v(" 分片集群的构成")]),a("ul",[a("li",[t._v("至少两个分片")]),a("li",[t._v("配置服务器    用于存储分片元数据和集群配置，哪些数据存于哪些分片信息之类的")]),a("li",[t._v("mongos   分片路由，客户端访问分片路由，再由分片路由去访问配置服务器获取对应分片数据")]),a("li",[t._v("server   用于运行分片路由的应用服务器")])]),a("h4",{attrs:{id:"配置服务器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置服务器","aria-hidden":"true"}},[t._v("#")]),t._v(" 配置服务器")]),a("ul",[a("li",[t._v("存储各分片数据段列表和数据段范围")]),a("li",[t._v("存储集群的认证和授权配置")]),a("li",[t._v("不同的集群不要共用配置服务器")])]),a("h4",{attrs:{id:"mongos"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mongos","aria-hidden":"true"}},[t._v("#")]),t._v(" mongos")]),a("ul",[a("li",[t._v("客户请求应发给mongos，而不是分片服务器")]),a("li",[t._v("当查询包含分片片键时，mongos将查询发送到指定分片")]),a("li",[t._v("否则mongos将查询发送到所有分片，并汇总所有查询结果")])]),a("h3",{attrs:{id:"主分片"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主分片","aria-hidden":"true"}},[t._v("#")]),t._v(" 主分片")]),a("ul",[a("li",[t._v("集群中的每个数据库都会选择一个分片做为主分片")]),a("li",[t._v("主分片中存储的是不需要分片的集合")]),a("li",[t._v("创建数据库的时候，数据最少的分片会被选择为主分片")])]),a("h3",{attrs:{id:"分片片键"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分片片键","aria-hidden":"true"}},[t._v("#")]),t._v(" 分片片键")]),a("ul",[a("li",[t._v("片键值被用来将集合中的文档划分为数据段")]),a("li",[t._v("片键必须对应一个索引或者索引前缀（单键或者复合键）")]),a("li",[t._v("可以使用片键值的哈希值来生成哈希片键")])]),a("h2",{attrs:{id:"数据库安全"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库安全","aria-hidden":"true"}},[t._v("#")]),t._v(" 数据库安全")]),a("h3",{attrs:{id:"创建用户"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建用户","aria-hidden":"true"}},[t._v("#")]),t._v(" 创建用户")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 进入admin数据库 该数据库用来保存用户信息")]),t._v("\nuse admin"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 在admin数据库中创建用户信息")]),t._v("\ndb.createUser"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tuser: "),a("span",{attrs:{class:"token string"}},[t._v('"userAdmin"')]),t._v(",\n\tpwd: "),a("span",{attrs:{class:"token string"}},[t._v('"passwords"')]),t._v(",\n\troles: "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"userAdminAnyDatabase"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("# 授权角色 该权限只能管理数据库用户和角色 但是不能操作集合")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("code",[t._v("mongodb")]),t._v("默认是没有启动身份认证的，也就是默认用户登录。这种情况下，没办法使用创建用户进行登录，如果想使用身份认证，则启动"),a("code",[t._v("mongodb")]),t._v("的时候需要加上一个参数"),a("code",[t._v("-auth")]),t._v("：")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 启用mongodb的身份认证")]),t._v("\nmongod --auth"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("启用身份认证之后，就可以使用自定义用户进行登录"),a("code",[t._v("mongodb")]),t._v("。")]),a("h3",{attrs:{id:"用户认证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用户认证","aria-hidden":"true"}},[t._v("#")]),t._v(" 用户认证")]),a("p",[t._v("创建好用户之后，需要进行用户验证：")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 验证用户")]),t._v("\nmongo -u "),a("span",{attrs:{class:"token string"}},[t._v('"userAdmin"')]),t._v(" -p "),a("span",{attrs:{class:"token string"}},[t._v('"passwords"')]),t._v(" --authenticationDatabase "),a("span",{attrs:{class:"token string"}},[t._v('"admin"')]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# --anthenticationDatabase 表示需要验证信息的数据库是哪个，如果用户信息存在默认进入的表中，则不需要该参数")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# or ")]),t._v("\nuse admin"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndb.auth"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"userAdmin"')]),t._v(", "),a("span",{attrs:{class:"token string"}},[t._v('"passwords"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"授权"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#授权","aria-hidden":"true"}},[t._v("#")]),t._v(" 授权")]),a("h4",{attrs:{id:"权限"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#权限","aria-hidden":"true"}},[t._v("#")]),t._v(" 权限")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 权限 = 我在哪儿 + 做什么")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# e.g")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tresource: "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tdb: "),a("span",{attrs:{class:"token string"}},[t._v('"test"')]),t._v(",\n\t\tcollection: "),a("span",{attrs:{class:"token string"}},[t._v('""')]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\tactions: "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"find"')]),t._v(", "),a("span",{attrs:{class:"token string"}},[t._v('"update"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# resource 表示我想操作权限的数据库和集合是哪些，如果collection为空，则为整个db的所有集合")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# actions 表示对该数据库，我能做的操作有哪些，这里表示在test中，该用户能够对集合执行find和update操作")]),t._v("\n")])])]),a("h4",{attrs:{id:"角色"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#角色","aria-hidden":"true"}},[t._v("#")]),t._v(" 角色")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 角色 = 一组权限的集合")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# e.g")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("read")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("# 读取当前数据库中所有非系统集合")]),t._v("\nreadWrite "),a("span",{attrs:{class:"token comment"}},[t._v("# 读写当前数据库中所有非系统集合")]),t._v("\ndbAdmin "),a("span",{attrs:{class:"token comment"}},[t._v("# 管理当前数据库")]),t._v("\nuserAdmin "),a("span",{attrs:{class:"token comment"}},[t._v("# 管理当前数据库中的用户和角色")]),t._v("\nread/readWrite/dbAdmin/userAdmin + AnyDatabase "),a("span",{attrs:{class:"token comment"}},[t._v("# 对所有数据库执行操作(只在admin数据库中提供)")]),t._v("\n")])])]),a("h4",{attrs:{id:"示例-13"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例-13","aria-hidden":"true"}},[t._v("#")]),t._v(" 示例")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 创建一个只能读取test数据库的用户")]),t._v("\nuse admin"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndb.createUser"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tuser: "),a("span",{attrs:{class:"token string"}},[t._v('"onlyRead"')]),t._v(",\n\tpwd: "),a("span",{attrs:{class:"token string"}},[t._v('"password"')]),t._v(",\n\troles: "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\trole: "),a("span",{attrs:{class:"token string"}},[t._v('"read"')]),t._v(",\n\t\tdb: "),a("span",{attrs:{class:"token string"}},[t._v('"test"')]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("# 如果是在test中创建的用户 可以省略db")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nmongo -u "),a("span",{attrs:{class:"token string"}},[t._v('"onlyRead"')]),t._v(" -p "),a("span",{attrs:{class:"token string"}},[t._v('"password"')]),t._v(" --authenticationDatabase "),a("span",{attrs:{class:"token string"}},[t._v('"admin"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# PS: 新创建的用户要生效，一定需要关闭mongodb的进程，重新进入")]),t._v("\n\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 创建一个只能读取user集合的用户")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 没有内建角色符合，所以先创建一个自定义的角色")]),t._v("\nuse "),a("span",{attrs:{class:"token function"}},[t._v("test")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndb.createRole"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\trole: "),a("span",{attrs:{class:"token string"}},[t._v('"readUser"')]),t._v(",\n\tprivileges: "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tresource: "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tdb: "),a("span",{attrs:{class:"token string"}},[t._v('"test"')]),t._v(",\n\t\t\tcollection: "),a("span",{attrs:{class:"token string"}},[t._v('"user"')]),t._v("\n\t\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t\tactions: "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"find"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("# 只能执行读取操作")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n\troles: "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("# 从原有角色继承")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 然后创建角色")]),t._v("\ndb.createUser"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tuser: "),a("span",{attrs:{class:"token string"}},[t._v('"onlyReadUser"')]),t._v(",\n\tpwd: "),a("span",{attrs:{class:"token string"}},[t._v('"password"')]),t._v(",\n\troles: "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\trole: "),a("span",{attrs:{class:"token string"}},[t._v('"readUser"')]),t._v(",\n\t\tdb: "),a("span",{attrs:{class:"token string"}},[t._v('"test"')]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"数据库常用工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库常用工具","aria-hidden":"true"}},[t._v("#")]),t._v(" 数据库常用工具")]),a("h3",{attrs:{id:"数据处理工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据处理工具","aria-hidden":"true"}},[t._v("#")]),t._v(" 数据处理工具")]),a("h4",{attrs:{id:"mongoexport"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mongoexport","aria-hidden":"true"}},[t._v("#")]),t._v(" mongoexport")]),a("blockquote",[a("p",[t._v("将数据导出为"),a("code",[t._v("json")]),t._v("或者"),a("code",[t._v("csv")]),t._v("格式的文件。")])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 语法")]),t._v("\nmongoexport --db dbName --collection collectionName --type"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("csv/json --fields field1,field2,"),a("span",{attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".,fieldn --out outputPath -u userName -p password --authenticationDatabase "),a("span",{attrs:{class:"token string"}},[t._v('"admin"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# dbName 数据库名称")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# collectionName 集合名称")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# --type csv或者json")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# --fields 导出的字段名称 type为csv时必须提供 如果有内嵌文档，可以使用field.field方式选择")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# ouputPath 导出的路径")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# userName 执行导出操作的用户名称")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# password 执行导出操作的用户密码")]),t._v("\n")])])]),a("p",[a("code",[t._v("mongoexport")]),t._v("还可以使用查询语句进行文档导出：")]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 通过筛选导出")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 在原来的语法最后加上--query参数")]),t._v("\nmongoexport --db dbName --collection collectionName --type"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("csv/json --fields field1,field2,"),a("span",{attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".,fieldn --out outputPath -u userName -p password --authenticationDatabase "),a("span",{attrs:{class:"token string"}},[t._v('"admin"')]),t._v(" --query "),a("span",{attrs:{class:"token string"}},[t._v("'{ field: <expression> }'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("除此之外，还支持"),a("code",[t._v("--limit")]),t._v("、"),a("code",[t._v("--skip")]),t._v("和"),a("code",[t._v("--sort")]),t._v("。")]),a("h4",{attrs:{id:"mongoimport"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mongoimport","aria-hidden":"true"}},[t._v("#")]),t._v(" mongoimport")]),a("blockquote",[a("p",[t._v("将json或者csv格式的数据导入到mongodb中。")])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 语法")]),t._v("\nmongoimport --db dbName --collection collectionName --type csv/json "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--headerline "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" --fields field1,field2,"),a("span",{attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".,fieldn"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" --file filePath  "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--drop"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" -u userName -p password --authenticationDatabase "),a("span",{attrs:{class:"token string"}},[t._v('"admin"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--upsertFields filed1,filed2,"),a("span",{attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".,filedn"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--stopOnError"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--maintainInsertionOrder"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# dbName 数据库名称")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# collectionName 集合名称")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# --type csv或者json 为json时可以不提供headerline和fields")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# --headerline 告知程序csv的第一行为字段名称而非数据")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# --fileds 和headerline是二选一参数 headerline取第一行字段为字段名，fields则是自定义字段名称")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# filePath 导入文件的路径")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# --drop 是否在导入前先drop集合 可选参数")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# userName 执行导出操作的用户名称")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# password 执行导出操作的用户密码")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# upsertFields 告诉mongodb 导入的时候看字段是否相同，相同的话就更新，不要根据文档主键不同而不断的去新增文档 可选参数")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# --stopOnError 导入出错就停止 可选参数")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# --maintainInsertionOrder 按照文件字段值顺序进行导入 可选参数")]),t._v("\n")])])]),a("h3",{attrs:{id:"数据库监控"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库监控","aria-hidden":"true"}},[t._v("#")]),t._v(" 数据库监控")]),a("h4",{attrs:{id:"mongostat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mongostat","aria-hidden":"true"}},[t._v("#")]),t._v(" mongostat")]),a("blockquote",[a("p",[t._v("监听数据库的使用情况")])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 语法")]),t._v("\nmongostat --host localhost --port 27017 -u userName -p password --authenticationDatabase "),a("span",{attrs:{class:"token string"}},[t._v('"admin"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--rowcount times"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("times"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-o "),a("span",{attrs:{class:"token string"}},[t._v('"filed1,filed2,..,fieldn"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# localhost 监听的ip")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# port 监听的端口")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# --rowcount times 一共抓取times次监控数据 可选参数")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# times 每隔times秒抓取一次数据 可选参数")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("# -o 只想显示的状态名称")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# PS：需要用户有clusterMonitor的角色权限")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 状态名称")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("## command 每秒执行的命令书")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("## dirty, used 数据库引擎缓存的使用量百分比")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("## vsize 虚拟内存使用量(MB)")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("## res 常驻内存使用量(MB)")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("## conn 连接数")]),t._v("\n")])])]),a("h4",{attrs:{id:"mongotop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mongotop","aria-hidden":"true"}},[t._v("#")]),t._v(" mongotop")]),a("blockquote",[a("p",[t._v("监听数据库中集合的查询情况")])]),a("p",[t._v("语法同"),a("code",[t._v("mongostat")]),t._v("。")]),a("h2",{attrs:{id:"数据库故障诊断"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库故障诊断","aria-hidden":"true"}},[t._v("#")]),t._v(" 数据库故障诊断")]),a("h3",{attrs:{id:"查询时间过长"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询时间过长","aria-hidden":"true"}},[t._v("#")]),t._v(" 查询时间过长")]),a("p",[t._v("建立合适的索引，可以使用"),a("a",{attrs:{href:"####explain"}},[t._v("explain")]),t._v("来判断索引的效率。")]),a("h3",{attrs:{id:"响应时间过长"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#响应时间过长","aria-hidden":"true"}},[t._v("#")]),t._v(" 响应时间过长")]),a("p",[t._v("工作集可能超出RAM的大小，可以通过"),a("code",[t._v("mongostat")]),t._v("来查看数据库的使用情况。")]),a("h3",{attrs:{id:"连接失败"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#连接失败","aria-hidden":"true"}},[t._v("#")]),t._v(" 连接失败")]),a("p",[t._v("可能超过了连接数，使用命令"),a("code",[t._v("db.serverStatus().connections")]),t._v("来查看"),a("code",[t._v("mongodb")]),t._v("支持的连接数。")]),a("p",[t._v("查看服务器数据库配置文件中的"),a("code",[t._v("maxIncomingConnections")]),t._v("的数值是否被限制。")]),a("p",[t._v("查看"),a("code",[t._v("ulimit")]),t._v("配置，主要看"),a("code",[t._v("open files")]),t._v("的数值。使用命令："),a("code",[t._v("ulimit -a")]),t._v("。")])])}],!1,null,null,null);s.default=e.exports}}]);